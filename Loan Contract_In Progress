pragma solidity ^0.5.1;

contract MyContract {
    string value;
    
    enum
    struct Interest{
        address coinContract;
        int8 percentage;
        string[] pairing;
    }
    
    struct LoanDetails{
        address coinContract;
        uint256 amount;
        Interest[] interest;
    }
    
    struct Person {
        string firstName;
        string lastName;
    }
    
    Person[] people;
    
    LoanDetails[] loanDetails;
    uint256 loanCount;
    uint256 peopleCount;
    address owner;
    
    
    constructor() public {
        value = "constructor value";
        owner = msg.sender;
        peopleCount = 0;
        loanCount = 0;
    }
    
    function add(address _contract, string memory _value, address _exchangeContract) public {
        require(msg.sender == owner,'Only owner can add new supported pairing');
        
            
        
    }
    
    function get() public view returns(string memory) {
        return value;
    }
    
    function set(string memory _value) public {
        value = _value;
    }
    
    function addPerson(string memory _firstName, string memory _lastName) public {
        people.push(Person(_firstName,_lastName));
        peopleCount +=1;
    }
    
    function getNoOfPeople() public view returns(uint256){
        return peopleCount;
    }
}